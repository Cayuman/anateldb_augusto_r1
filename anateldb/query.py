# AUTOGENERATED! DO NOT EDIT! File to edit: queries.ipynb (unless otherwise specified).

__all__ = ['ESTACOES', 'PLANO_BASICO', 'COL_ESTACOES', 'COL_PLANO_BASICO', 'STEL', 'RADIODIFUSAO', 'RADCOM',
           'connect_db', 'update_radcom', 'update_stel', 'update_mosaico']

# Cell
import requests
from pathlib import Path
import pandas as pd
import pyodbc
from fastcore.test import *

# Cell
ESTACOES = 'http://sistemas.anatel.gov.br/se/public/file/b/srd/estacao_rd.zip'
PLANO_BASICO = 'http://sistemas.anatel.gov.br/se/public/file/b/srd/PlanoBasico.zip'
COL_ESTACOES = ('@SiglaServico', '@state', '@entidade', '@fistel', '@cnpj', '@municipio', '@uf', '@id')
COL_PLANO_BASICO = ('@id', '@Classe', '@Frequencia', '@Latitude', '@Longitude')
STEL = ('Frequência', 'Latitude', 'Longitude', 'Serviço', 'Número da Estação', 'Entidade', 'Município', 'UF')
RADIODIFUSAO = ('Frequência', 'Latitude', 'Longitude', 'Situação', 'Classe', 'Número da Estação', 'Entidade', 'Município', 'UF')
RADCOM = """
       select f.MedFrequenciaInicial as 'Frequência',
       uf.SiglaUnidadeFrequencia as 'Unidade',
       es.MedLatitudeDecimal as 'Latitude' ,
       es.MedLongitudeDecimal as 'Longitude',
       Sitarweb.dbo.FN_SRD_RetornaIndFase(PB.NumServico, Pr.idtPedidoRadcom) as 'Fase',
       Sitarweb.dbo.FN_SRD_RetornaSiglaSituacao(h.IdtHabilitacao, Es.IdtEstacao) as 'Situação',
       es.NumEstacao as 'Numero da Estação',
       e.NumCnpjCpf as 'CNPJ',
       e.NomeEntidade as 'Entidade',
       m.NomeMunicipio as 'Município',
       pb.SiglaUF as 'UF'
from ENTIDADE e
inner join HABILITACAO h on h.IdtEntidade = e.IdtEntidade
inner join SRD_PEDIDORADCOM pr on pr.IdtHabilitacao = h.IdtHabilitacao
inner join SRD_PLANOBASICO pb on pb.IdtPlanoBasico = pr.IdtPlanoBasico
inner join estacao es on es.IdtHabilitacao = h.IdtHabilitacao
inner join FREQUENCIA f on f.IdtEstacao = es.IdtEstacao
inner join UnidadeFrequencia uf on uf.IdtUnidadeFrequencia = f.IdtUnidadeFrequencia
inner join Municipio m on m.CodMunicipio = pb.CodMunicipio
where h.NumServico = '231'
"""

# Cell
def connect_db():
    """Conecta ao Banco ANATELBDRO01 e retorna o 'cursor' (iterador) do Banco pronto para fazer iterações"""
    conn = pyodbc.connect(
        "Driver={ODBC Driver 17 for SQL Server};"
        "Server=ANATELBDRO01;"
        "Database=SITARWEB;"
        "Trusted_Connection=yes;"
        "MultipleActiveResultSets=True;"
    )

    return conn

# Cell
def update_radcom():
    """Update the Radcom File querying the Database"""
    conn = connect_db()
    pd.read_sql_query(RADCOM, conn).to_feather('anatelspyder/files/radcom.fth')

def update_stel():
    """Update the Stel File querying the Database"""
    conn = connect_db()
    pd.read_sql_query(STEL, conn).to_feather('anatelspyder/files/stel.fth')

def update_mosaico():
    """Update the Mosaico File by downloading the zipped xml file from the Spectrum E Web page"""
    file = requests.get(ESTACOES)
    with open('anatelspyder/files/estações.zip', 'wb') as estações:
        estações.write(file.content)
    file = requests.get(PLANO_BASICO)
    with open('anatelspyder/files/plano_basico.zip', 'wb') as plano_basico:
        plano_basico.write(file.content)